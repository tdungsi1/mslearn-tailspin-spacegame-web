trigger:
- '*'

pool:
  vmImage: 'ubuntu-16.04'
  demands:
    - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.300'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: SonarQubePrepare@4
  inputs:
    scannerMode: 'CLI'
    configMode: 'file'
- task: SonarQubePublish@4
  displayName: 'Publish what'
  inputs:
    pollingTimeoutSec: '300'

- task: SonarQubeAnalyze@4
  displayName: 'This ssaid this one is scan'
- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# - template: templates/build.yml
#   parameters:
#     buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()



- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(0bf9c42b-c6f4-4493-9d34-838e4373de49)'
    appType: 'webApp'
    WebAppName: 'Daumahello2world'
    deployToSlotOrASE: true
    ResourceGroupName: 'DockerContainer'
    SlotName: 'production'
    packageForLinux: '/home/vsts/work/1/a/**/*.zip'